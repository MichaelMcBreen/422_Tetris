1. Keyboard input
	The current keyboard input uses a debouncer for much of the code so sending
	a single key press is not recognized and I have not found a way to simulate
	a key hold for enough time. The other issue is the game time update settings
	the way it is implemented the game needs to be running for the menu to be
	updated, this should be changed as to not depend on things above it.

	Update- The keyboard interrupt class depends on the use of Keyboard state and game time both of which are part of XNA and we can not see.
	To get around this I wrote a test function into keyboard input that allows us to set a keyboard state however it does not change what keys are pressed on the keyboard (this is a bit confusing but i can set the keyboard state of the input class but if KeyboardState newState = Keyboard.GetState(); is called is will return what keys are pressed on the physical keyboard).

	Also the menu update grabs physical keyboard so i wrote a test function without that logic.
	
	The class game1 has way too much going on it it. The logic for pretty much every action you could do in the game is in this one class making it very hard to test small pieces like checking valid placement.
	
	In game1 there is a private function ValidMove. This really needs to be at least two functions as it is used to check if a piece location will be valid and then moves it. There should be a function to check if a move if valid and a function to move a piece.
	
	I do not understand the types for Tetronimo. 